class DurCal:
    def __init__(self, wd, h, i):
        self.i = i
        self.wd = wd
        self.h = h

    def computee(self):
        v = {
            1: 13,
            2: 67,
            3: 4,
            4: 22,
            5: 18,
            6: 224.4,
            7: 110.9,
            8: 58,
            9: 53,
            10: 91,
            11: 92.9,
            12: 104,
            13: 97.8,
            14: 127,
            15: 20,
            16: 40,
            17: 40,
            18: 215.8,
            19: 287.1,
            20: 18
        }
        PP = (
        (5, 8, 1), (5, 9, 0.9), (5, 10, 0.85), (5, 11, 0.65), (5, 12, 0.6), (6, 8, 0.9), (6, 9, 0.85), (6, 10, 0.8),
        (6, 11, 0.65), (6, 12, 0.6), (7, 8, 0.75), (7, 9, 0.7), (7, 10, 0.65), (7, 11, 0.6), (7, 12, 0.55))
        for tup in PP:
            if tup[0] == self.wd and tup[1] == self.h:
             E = tup[2]
        if not E:
            raise ValueError("مقدار مورد نظر برای E پیدا نشد.")

        D = v[self.i+1]/((self.h/8)*E)
        return D , E

# NB = DurCal(5,9,2)
# ZX = print(NB.computee())